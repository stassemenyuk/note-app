{"version":3,"sources":["components/table-header/TableHeader.js","components/table/Table.js","actions/actions.js","components/NotesBlock.js","components/create-form-content/FormContent.js","components/CounterBlocks.js","components/app/App.js","reducer/reducer.js","store/initialState.js","store/store.js","index.js"],"names":["TableHeader","props","titles","map","item","index","Table","name","headers","blocks","className","addItem","element","arr","type","deleteItem","id","NotesBlock","notes","useSelector","state","archivedNotes","dispatch","useDispatch","time","text","category","dates","archive","tools","onClick","elem","JSON","parse","stringify","setDisabled","disabled","useState","value","onChange","e","editItem","target","FormContent","setText","setCategory","action","onSubmit","preventDefault","Date","toLocaleTimeString","exec","htmlFor","placeholder","options","selectedIndex","label","CounterBlocks","actTasks","archTasks","actRnd","archRnd","actIdea","archIdea","getNoteOrArchiveBlocks","App","notesBlocks","archivedNotesBlocks","notesHeaders","formVisibility","setFormVisibility","archiveVisibility","setArchiveVisibility","createNoteClassnames","archivedNotesClassnames","reducer","temp","notesCounter","length","archivedNotesCounter","slice","forEach","datePattern","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d390c1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function TableHeader(props) {\r\n  const titles = props.titles.map((item, index) => {\r\n    return <th key={index}>{item}</th>;\r\n  });\r\n\r\n  return (\r\n    <thead>\r\n      <tr>{titles}</tr>\r\n    </thead>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TableHeader from '../table-header/TableHeader';\r\n\r\nimport './Table.css';\r\n\r\nexport default function Table({ name, headers, blocks }) {\r\n  return (\r\n    <table className={name}>\r\n      <TableHeader titles={headers} />\r\n      <tbody>{blocks}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","export const addItem = (element, arr) => ({ type: 'ADD', element, arr });\r\nexport const deleteItem = (id, arr) => ({ type: 'DELETE', id, arr });\r\nexport const editItem = (id, text) => ({ type: 'EDIT', id, text });\r\nexport const countItems = () => ({ type: 'COUNT' });\r\n","import React, { useState } from 'react';\r\nimport { addItem, deleteItem, countItems, editItem } from '../actions/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function NotesBlock(props) {\r\n  const notes = useSelector((state) => state.notes),\r\n    archivedNotes = useSelector((state) => state.archivedNotes);\r\n  const dispatch = useDispatch();\r\n  const { time, text, category, dates, archive, id } = props;\r\n  let tools = '';\r\n  if (archive) {\r\n    tools = (\r\n      <button\r\n        className=\" btn btn-secondary\"\r\n        onClick={() => {\r\n          let elem = JSON.parse(JSON.stringify(archivedNotes[id]));\r\n          dispatch(addItem(elem, 'note'));\r\n          dispatch(deleteItem(id, 'arch'));\r\n          dispatch(countItems());\r\n        }}>\r\n        Unarchive\r\n      </button>\r\n    );\r\n  } else {\r\n    tools = (\r\n      <>\r\n        <button\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={() => {\r\n            setDisabled(!disabled);\r\n          }}>\r\n          Change editability\r\n        </button>\r\n        <button\r\n          className=\" btn btn-secondary\"\r\n          onClick={() => {\r\n            let elem = JSON.parse(JSON.stringify(notes[id]));\r\n            dispatch(addItem(elem, 'arch'));\r\n            dispatch(deleteItem(id, 'note'));\r\n            dispatch(countItems());\r\n          }}>\r\n          Archive\r\n        </button>\r\n        <button\r\n          className=\" btn btn-danger\"\r\n          onClick={() => {\r\n            dispatch(deleteItem(id, 'note'));\r\n            dispatch(countItems());\r\n          }}>\r\n          X\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{time}</td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={text}\r\n          disabled={disabled}\r\n          onChange={(e) => dispatch(editItem(id, e.target.value))}></input>\r\n      </td>\r\n      <td>{category}</td>\r\n      <td>{dates}</td>\r\n      <td>{tools}</td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addItem, countItems } from '../../actions/actions';\r\nimport './FormContent.css';\r\n\r\nexport default function FormContent() {\r\n  const [text, setText] = useState('');\r\n  const [category, setCategory] = useState('Task');\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <form\r\n      className=\"create-form\"\r\n      action=\"\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (text === '') return;\r\n        let elem = {};\r\n        elem.text = text;\r\n        elem.time = new Date().toLocaleTimeString();\r\n        elem.category = category;\r\n        let datePattern = /\\d+\\/\\d+\\/\\d+/;\r\n        elem.dates = datePattern.exec(text) || '-';\r\n        dispatch(addItem(elem, 'note'));\r\n        dispatch(countItems());\r\n        setText('');\r\n      }}>\r\n      <h2>Create Note</h2>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"note-content\">Text of the note </label>\r\n        <input\r\n          onChange={(e) => setText(e.target.value)}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"note-content\"\r\n          placeholder=\"Here\"\r\n          value={text}\r\n        />\r\n        <label htmlFor=\"note-category\">Select category</label>\r\n        <select\r\n          onChange={(e) => setCategory(e.target[e.target.options.selectedIndex].label)}\r\n          id=\"note-category\"\r\n          className=\"form-control\">\r\n          <option>Task</option>\r\n          <option>Random thought</option>\r\n          <option>Idea</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-success\">\r\n        Enter\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CounterBlocks() {\r\n  const { actTasks, archTasks, actRnd, archRnd, actIdea, archIdea } = useSelector((state) => state);\r\n  return [\r\n    <tr key={0}>\r\n      <td>Task</td>\r\n      <td>{actTasks}</td>\r\n      <td>{archTasks}</td>\r\n    </tr>,\r\n    <tr key={1}>\r\n      <td>Random thought</td>\r\n      <td>{actRnd}</td>\r\n      <td>{archRnd}</td>\r\n    </tr>,\r\n    <tr key={2}>\r\n      <td>Idea</td>\r\n      <td>{actIdea}</td>\r\n      <td>{archIdea}</td>\r\n    </tr>,\r\n  ];\r\n}\r\n","import React, { useState } from 'react';\r\nimport Table from '../table/Table';\r\nimport { useSelector } from 'react-redux';\r\nimport NotesBlock from '../NotesBlock';\r\nimport FormContent from '../create-form-content/FormContent';\r\nimport CounterBlocks from '../CounterBlocks';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const notes = useSelector((state) => state.notes),\r\n    archivedNotes = useSelector((state) => state.archivedNotes);\r\n  const notesBlocks = getNoteOrArchiveBlocks(notes, false),\r\n    archivedNotesBlocks = getNoteOrArchiveBlocks(archivedNotes, true);\r\n  const notesHeaders = ['Time', 'Title', 'Category', 'Dates', 'Tools'];\r\n  const counterHeaders = ['Note category', 'Active', 'Archive'];\r\n\r\n  const [formVisibility, setFormVisibility] = useState(false);\r\n  const [archiveVisibility, setArchiveVisibility] = useState(false);\r\n  let createNoteClassnames = 'create-form',\r\n    archivedNotesClassnames = 'archived-notes';\r\n  if (!formVisibility) createNoteClassnames += ' hide';\r\n  if (!archiveVisibility) archivedNotesClassnames += ' hide';\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"notes\">\r\n        <h2>Your notes</h2>\r\n        <Table name={'note-list'} blocks={notesBlocks} headers={notesHeaders} />\r\n      </div>\r\n      <button className=\"btn btn-success\" onClick={() => setFormVisibility(!formVisibility)}>\r\n        Create Note\r\n      </button>\r\n      <button\r\n        className=\"btn btn-secondary\"\r\n        onClick={() => setArchiveVisibility(!archiveVisibility)}>\r\n        Archived Notes\r\n      </button>\r\n      <div className={archivedNotesClassnames}>\r\n        <h2>Archived Notes</h2>\r\n        <Table name={'note-list'} blocks={archivedNotesBlocks} headers={notesHeaders} archive />\r\n      </div>\r\n      <div className={createNoteClassnames}>\r\n        <FormContent />\r\n      </div>\r\n      <div className=\"counter-table\">\r\n        <Table name={'stats'} blocks={CounterBlocks()} headers={counterHeaders} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getNoteOrArchiveBlocks(arr, archive) {\r\n  return arr.map(({ text, category, id, time, dates }) => {\r\n    return (\r\n      <NotesBlock\r\n        key={id}\r\n        text={text}\r\n        category={category}\r\n        time={time}\r\n        dates={dates}\r\n        id={id}\r\n        archive={archive}\r\n      />\r\n    );\r\n  });\r\n}\r\n\r\nexport default App;\r\n","const reducer = (state = [], action) => {\r\n  let temp = JSON.parse(JSON.stringify(state));\r\n  temp.actTasks = 0;\r\n  temp.actRnd = 0;\r\n  temp.actIdea = 0;\r\n  temp.archTasks = 0;\r\n  temp.archRnd = 0;\r\n  temp.archIdea = 0;\r\n\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      if (action.arr === 'note') {\r\n        action.element.id = temp.notesCounter;\r\n        temp.notes = [...temp.notes, action.element];\r\n        temp.notesCounter = temp.notes.length;\r\n        temp.archivedNotesCounter = temp.archivedNotes.length;\r\n      } else {\r\n        action.element.id = temp.archivedNotesCounter;\r\n        temp.archivedNotes = [...temp.archivedNotes, action.element];\r\n        temp.notesCounter = temp.notes.length;\r\n        temp.archivedNotesCounter = temp.archivedNotes.length;\r\n      }\r\n\r\n      return temp;\r\n    case 'DELETE':\r\n      if (action.arr === 'note') {\r\n        temp.notes = [...temp.notes.slice(0, action.id), ...temp.notes.slice(action.id + 1)];\r\n        temp.notes.forEach((item) => {\r\n          if (item.id > action.id) {\r\n            item.id--;\r\n          }\r\n        });\r\n        temp.notesCounter = temp.notes.length;\r\n        temp.archivedNotesCounter = temp.archivedNotes.length;\r\n      } else {\r\n        temp.archivedNotes = [\r\n          ...temp.archivedNotes.slice(0, action.id),\r\n          ...temp.archivedNotes.slice(action.id + 1),\r\n        ];\r\n        temp.archivedNotes.forEach((item) => {\r\n          if (item.id > action.id) {\r\n            item.id--;\r\n          }\r\n        });\r\n        temp.notesCounter = temp.notes.length;\r\n        temp.archivedNotesCounter = temp.archivedNotes.length;\r\n      }\r\n      return temp;\r\n    case 'COUNT':\r\n      temp.notes.forEach((item) => {\r\n        switch (item.category) {\r\n          case 'Task':\r\n            temp.actTasks++;\r\n            break;\r\n          case 'Random thought':\r\n            temp.actRnd++;\r\n            break;\r\n          case 'Idea':\r\n            temp.actIdea++;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      temp.archivedNotes.forEach((item) => {\r\n        switch (item.category) {\r\n          case 'Task':\r\n            temp.archTasks++;\r\n            break;\r\n          case 'Random thought':\r\n            temp.archRnd++;\r\n            break;\r\n          case 'Idea':\r\n            temp.archIdea++;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      return temp;\r\n    case 'EDIT':\r\n      temp.notes[action.id].text = action.text;\r\n      let datePattern = /\\d+\\/\\d+\\/\\d+/;\r\n      temp.notes[action.id].dates = datePattern.exec(action.text) || '-';\r\n      return temp;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  notes: [\r\n    {\r\n      time: '11:32:14 AM',\r\n      text: 'Pick up children from school 10/8/2021',\r\n      category: 'Task',\r\n      dates: '10/8/2021',\r\n      id: 0,\r\n    },\r\n    {\r\n      time: '11:32:52 AM',\r\n      text: 'Should i buy a Bitcoin? ',\r\n      category: 'Random thought',\r\n      dates: '-',\r\n      id: 1,\r\n    },\r\n    {\r\n      time: '11:33:12 AM',\r\n      text: 'Wash dishes',\r\n      category: 'Task',\r\n      dates: '-',\r\n      id: 2,\r\n    },\r\n    {\r\n      time: '11:32:14 AM',\r\n      text: 'Clean a car',\r\n      category: 'Task',\r\n      dates: '10/8/2021',\r\n      id: 3,\r\n    },\r\n    {\r\n      time: '11:32:52 AM',\r\n      text: 'Create my own weather sity',\r\n      category: 'Idea',\r\n      dates: '-',\r\n      id: 4,\r\n    },\r\n    {\r\n      time: '11:33:12 AM',\r\n      text: 'Should i buy a new house?',\r\n      category: 'Random thought',\r\n      dates: '-',\r\n      id: 5,\r\n    },\r\n    {\r\n      time: '11:33:12 AM',\r\n      text: 'Go to the gym',\r\n      category: 'Task',\r\n      dates: '-',\r\n      id: 6,\r\n    },\r\n  ],\r\n  archivedNotes: [],\r\n  notesCounter: 7,\r\n  archivedNotesCounter: 0,\r\n  actTasks: 4,\r\n  archTasks: 0,\r\n  actRnd: 2,\r\n  archRnd: 0,\r\n  actIdea: 1,\r\n  archIdea: 0,\r\n};\r\n\r\nexport default initialState;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducer/reducer';\r\nimport initialState from './initialState';\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}